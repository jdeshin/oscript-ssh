<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ScriptEngine</name>
    </assembly>
    <members>
        <member name="T:ScriptEngine.Machine.Contexts.DispatchUtility">
            <summary>
            Provides helper methods for working with COM IDispatch objects that have a registered type library.
            </summary>
        </member>
        <member name="M:ScriptEngine.Machine.Contexts.DispatchUtility.ImplementsIDispatch(System.Object)">
            <summary>
            Gets whether the specified object implements IDispatch.
            </summary>
            <param name="obj">An object to check.</param>
            <returns>True if the object implements IDispatch.  False otherwise.</returns>
        </member>
        <member name="M:ScriptEngine.Machine.Contexts.DispatchUtility.TryGetDispId(System.Object,System.String,System.Int32@)">
            <summary>
            Tries to get the DISPID for the requested member name.
            </summary>
            <param name="obj">An object that implements IDispatch.</param>
            <param name="name">The name of a member to lookup.</param>
            <param name="dispId">If the method returns true, this holds the DISPID on output.
            If the method returns false, this value should be ignored.</param>
            <returns>True if the member was found and resolved to a DISPID.  False otherwise.</returns>
            <exception cref="T:System.InvalidCastException">If <paramref name="obj"/> doesn't implement IDispatch.</exception>
        </member>
        <member name="M:ScriptEngine.Machine.Contexts.DispatchUtility.Invoke(System.Object,System.Int32,System.Object[])">
            <summary>
            Invokes a member by DISPID.
            </summary>
            <param name="obj">An object that implements IDispatch.</param>
            <param name="dispId">The DISPID of a member.  This can be obtained using
            <see cref="M:ScriptEngine.Machine.Contexts.DispatchUtility.TryGetDispId(System.Object,System.String,System.Int32@)"/>.</param>
            <param name="args">The arguments to pass to the member.</param>
            <returns>The member's return value.</returns>
            <remarks>
            This can invoke a method or a property get accessor.
            </remarks>
        </member>
        <member name="M:ScriptEngine.Machine.Contexts.DispatchUtility.Invoke(System.Object,System.String,System.Object[])">
            <summary>
            Invokes a member by name.
            </summary>
            <param name="obj">An object.</param>
            <param name="memberName">The name of the member to invoke.</param>
            <param name="args">The arguments to pass to the member.</param>
            <returns>The member's return value.</returns>
            <remarks>
            This can invoke a method or a property get accessor.
            </remarks>
        </member>
        <member name="M:ScriptEngine.Machine.Contexts.DispatchUtility.InvokeSetProperty(System.Object,System.Int32,System.Object)">
            <summary>
            Invokes property setter by DispID
            </summary>
            <param name="obj">An object.</param>
            <param name="dispId">The DISPID of a member.  This can be obtained using
            <see cref="M:ScriptEngine.Machine.Contexts.DispatchUtility.TryGetDispId(System.Object,System.String,System.Int32@)"/>.</param>
            <param name="propValue">new value of the property</param>
        </member>
        <member name="M:ScriptEngine.Machine.Contexts.DispatchUtility.InvokeSetProperty(System.Object,System.String,System.Object)">
            <summary>
            Invokes property setter
            </summary>
            <param name="obj">An object.</param>
            <param name="memberName">The name of the member to invoke.</param>
            <param name="propValue">new value of the property</param>
        </member>
        <member name="M:ScriptEngine.Machine.Contexts.DispatchUtility.RequireReference``1(``0,System.String)">
            <summary>
            Requires that the value is non-null.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="value">The value to check.</param>
            <param name="name">The name of the value.</param>
        </member>
        <member name="M:ScriptEngine.Machine.Contexts.DispatchUtility.TryGetDispId(ScriptEngine.Machine.Contexts.DispatchUtility.IDispatchInfo,System.String,System.Int32@)">
            <summary>
            Tries to get the DISPID for the requested member name.
            </summary>
            <param name="dispatch">An object that implements IDispatch.</param>
            <param name="name">The name of a member to lookup.</param>
            <param name="dispId">If the method returns true, this holds the DISPID on output.
            If the method returns false, this value should be ignored.</param>
            <returns>True if the member was found and resolved to a DISPID.  False otherwise.</returns>
        </member>
        <member name="T:ScriptEngine.Machine.Contexts.DispatchUtility.IDispatchInfo">
            <summary>
            A partial declaration of IDispatch used to lookup Type information and DISPIDs.
            </summary>
            <remarks>
            This interface only declares the first three methods of IDispatch.  It omits the
            fourth method (Invoke) because there are already plenty of ways to do dynamic
            invocation in .NET.  But the first three methods provide dynamic type metadata
            discovery, which .NET doesn't provide normally if you have a System.__ComObject
            RCW instead of a strongly-typed RCW.
            <para/>
            Note: The original declaration of IDispatch is in OAIdl.idl.
            </remarks>
        </member>
        <member name="M:ScriptEngine.Machine.Contexts.DispatchUtility.IDispatchInfo.GetTypeInfoCount(System.Int32@)">
            <summary>
            Gets the number of Types that the object provides (0 or 1).
            </summary>
            <param name="typeInfoCount">Returns 0 or 1 for the number of Types provided by <see cref="M:ScriptEngine.Machine.Contexts.DispatchUtility.IDispatchInfo.GetTypeInfo(System.Int32,System.Int32,System.IntPtr@)"/>.</param>
            <remarks>
            http://msdn.microsoft.com/en-us/library/da876d53-cb8a-465c-a43e-c0eb272e2a12(VS.85)
            </remarks>
        </member>
        <member name="M:ScriptEngine.Machine.Contexts.DispatchUtility.IDispatchInfo.GetTypeInfo(System.Int32,System.Int32,System.IntPtr@)">
            <summary>
            Gets the Type information for an object if <see cref="M:ScriptEngine.Machine.Contexts.DispatchUtility.IDispatchInfo.GetTypeInfoCount(System.Int32@)"/> returned 1.
            </summary>
            <param name="typeInfoIndex">Must be 0.</param>
            <param name="lcid">Typically, LOCALE_SYSTEM_DEFAULT (2048).</param>
            <param name="typeInfo">Returns the object's Type information.</param>
            <remarks>
            http://msdn.microsoft.com/en-us/library/cc1ec9aa-6c40-4e70-819c-a7c6dd6b8c99(VS.85)
            </remarks>
        </member>
        <member name="M:ScriptEngine.Machine.Contexts.DispatchUtility.IDispatchInfo.GetDispId(System.Guid@,System.String@,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets the DISPID of the specified member name.
            </summary>
            <param name="riid">Must be IID_NULL.  Pass a copy of Guid.Empty.</param>
            <param name="name">The name of the member to look up.</param>
            <param name="nameCount">Must be 1.</param>
            <param name="lcid">Typically, LOCALE_SYSTEM_DEFAULT (2048).</param>
            <param name="dispId">If a member with the requested <paramref name="name"/>
            is found, this returns its DISPID and the method's return value is 0.
            If the method returns a non-zero value, then this parameter's output value is
            undefined.</param>
            <returns>Zero for success. Non-zero for failure.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/6f6cf233-3481-436e-8d6a-51f93bf91619(VS.85)
            </remarks>
        </member>
        <member name="T:ScriptEngine.Machine.Contexts.ExceptionInfoContext">
            <summary>
            Класс позволяет узнать информацию о произошедшем исключении.
            </summary>
        </member>
        <member name="P:ScriptEngine.Machine.Contexts.ExceptionInfoContext.Parameters">
            <summary>
            Значение, переданное при создании исключения в конструкторе объекта ИнформацияОбОшибке.
            </summary>
        </member>
        <member name="P:ScriptEngine.Machine.Contexts.ExceptionInfoContext.Description">
            <summary>
            Содержит краткое описание ошибки. Эквивалент Exception.Message в C#
            </summary>
        </member>
        <member name="P:ScriptEngine.Machine.Contexts.ExceptionInfoContext.ModuleName">
            <summary>
            Имя модуля, вызвавшего исключение.
            </summary>
        </member>
        <member name="P:ScriptEngine.Machine.Contexts.ExceptionInfoContext.LineNumber">
            <summary>
            Номер строки, вызвавшей исключение.
            </summary>
        </member>
        <member name="P:ScriptEngine.Machine.Contexts.ExceptionInfoContext.SourceLine">
            <summary>
            Строка исходного кода, вызвавшего исключение.
            </summary>
        </member>
        <member name="P:ScriptEngine.Machine.Contexts.ExceptionInfoContext.InnerException">
            <summary>
            Содержит вложенное исключение, если таковое было. Эквивалент Exception.InnerException в C#
            </summary>
        </member>
        <member name="M:ScriptEngine.Machine.Contexts.ExceptionInfoContext.GetDescription">
            <summary>
            Содержит подробное описание исключения, включая стек вызовов среды исполнения CLR.
            т.е. не стек вызовов скрипта, а стек вызовов скриптового движка.
            Эквивалентно функции Exception.ToString() в C#.
            </summary>
            <returns>Строка.</returns>
        </member>
        <member name="T:ScriptEngine.Machine.Contexts.ExceptionTemplate">
            <summary>
            Служебный класс, создаваемый конструктором объекта "ИнформацияОбОшибке".
            Превращается в полноценный объект ИнформацияОбОшибке в момент выброса исключения.
            
            Данный класс предназначен для создания параметризованных исключений.
            </summary>
            <example>ВызватьИсключение Новый ИнформацияОбОшибке("Текст ошибки", ДополнительныеДанные);</example>
        </member>
        <member name="T:ScriptEngine.Machine.Contexts.SafeArrayWrapper">
            <summary>
            Вспомогательный класс для работы с объектами COMSafeArray, получаемыми из COM-объектов.
            На данный момент класс не является полноценной заменой для COMSafeArray и его нельзя создать вручную.
            </summary>
        </member>
        <member name="T:ScriptEngine.Machine.Contexts.ScriptInformationContext">
            <summary>
            Информация о выполняемом сценарии.
            </summary>
        </member>
        <member name="P:ScriptEngine.Machine.Contexts.ScriptInformationContext.Source">
            <summary>
            Путь к файлу сценария, если выполняется сценарий из файла. Для всех прочих сценариев возвращаемое значение определяется хост-приложением.
            </summary>
        </member>
        <member name="T:ScriptEngine.Machine.IndexedNameValueCollection`1">
            <summary>
            Универсальный класс для коллекций доступных по имени и номеру.
            Уже создано много с похожим функционалом по всему проекту. Постепенно можно переводить сюда.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
    </members>
</doc>
